---
# How the app will be deployed to the pod.
kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  name: api
  annotations:
    description: Defines how to deploy api
  labels:
    name: api
    part-of: coevent
    version: 1.0.0
    component: api
    managed-by: kustomize
    created-by: jeremy.foster
spec:
  replicas: 1
  test: false
  selector:
    part-of: coevent
    component: api
  strategy:
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  triggers:
    - type: ConfigChange
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - api
        from:
          kind: ImageStreamTag
          name: api:latest
  template:
    metadata:
      name: api
      labels:
        part-of: coevent
        component: api
    spec:
      containers:
        - name: api
          image: ""
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              protocol: TCP
          resources:
            requests:
              cpu: 20m
              memory: 250Mi
            limits:
              cpu: 100m
              memory: 500Mi
          env:
            - name: ASPNETCORE_ENVIRONMENT
              valueFrom:
                configMapKeyRef:
                  name: api
                  key: ASPNETCORE_ENVIRONMENT
            - name: ASPNETCORE_URLS
              valueFrom:
                configMapKeyRef:
                  name: api
                  key: ASPNETCORE_URLS

            - name: BaseUrl
              value: /

            - name: Authentication__Issuer
              valueFrom:
                configMapKeyRef:
                  name: api
                  key: Authentication__Issuer
            - name: Authentication__Audience
              valueFrom:
                configMapKeyRef:
                  name: api
                  key: Authentication__Audience
            - name: Authentication__SaltLength
              valueFrom:
                configMapKeyRef:
                  name: api
                  key: Authentication__SaltLength
            - name: Authentication__AccessTokenExpiresIn
              valueFrom:
                configMapKeyRef:
                  name: api
                  key: Authentication__AccessTokenExpiresIn
            - name: Authentication__RefreshTokenExpiresIn
              valueFrom:
                configMapKeyRef:
                  name: api
                  key: Authentication__RefreshTokenExpiresIn

            - name: ConnectionStrings__DefaultConnection
              valueFrom:
                secretKeyRef:
                  name: api
                  key: ConnectionStrings__DefaultConnection
            - name: Authentication__PrivateKey
              valueFrom:
                secretKeyRef:
                  name: api
                  key: Authentication__PrivateKey
            - name: Mail__FromEmail
              valueFrom:
                secretKeyRef:
                  name: api
                  key: Mail__FromEmail
            - name: Mail__Password
              valueFrom:
                secretKeyRef:
                  name: api
                  key: Mail__Password

            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: database
                  key: DB_NAME
            - name: DB_USER
              valueFrom:
                secretKeyRef:
                  name: database
                  key: DB_USER
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database
                  key: DB_PASSWORD

          # livenessProbe:
          #   httpGet:
          #     path: "/health"
          #     port: 8080
          #     scheme: HTTP
          #   initialDelaySeconds: 30
          #   timeoutSeconds: 30
          #   periodSeconds: 30
          #   successThreshold: 1
          #   failureThreshold: 3
          # readinessProbe:
          #   httpGet:
          #     path: "/health"
          #     port: 8080
          #     scheme: HTTP
          #   initialDelaySeconds: 30
          #   timeoutSeconds: 60
          #   periodSeconds: 30
          #   successThreshold: 1
          #   failureThreshold: 3
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
